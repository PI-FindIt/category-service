services:
  microservice-template_postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservice-template
      - findit_backend
    labels:
      - "traefik.http.routers.microservice-template_postgres.rule=HostRegexp(`postgres\\..+`) && PathPrefix(`/microservice`)"

  microservice-template_mongo:
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: mongo
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - mongo-data:/data/db
    networks:
      - microservice-template
      - findit_backend
    labels:
      - "traefik.http.routers.microservice-template_mongo.rule=HostRegexp(`mongo\\..+`) && PathPrefix(`/microservice`)"

  microservice-template:
    build:
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_URL: microservice-template_postgres
      MONGO_DB: mongo
      MONGO_URL: microservice-template_mongo
    depends_on:
      microservice-template_postgres:
        condition: service_healthy
      microservice-template_mongo:
        condition: service_healthy
    volumes:
      - .:/microservice-template
    tty: true
    networks:
      - microservice-template
      - findit_backend
    labels:
      - "traefik.http.routers.microservice-template.rule=HostRegexp(`api\\..+`) && PathPrefix(`/microservice`)"

networks:
  microservice-template:
  findit_backend:
    external: true
volumes:
  postgres-data:
  mongo-data:
